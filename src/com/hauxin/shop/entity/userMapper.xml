<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hauxin.shop.entity.User"><!-- 建议使用实体类的全路径 -->
<!-- <mapper namespace="com.hauxin.shop.dao.UserDao"> --><!-- namespace必须和接口的名称一样，这是基于接口的方式 -->
	<!-- 解决实体属性与数据表字段不一致问题-->
	<resultMap type="User" id="userResultMap">
		<id property="id" column="id" javaType="Integer"/>
		<result property="userName" column="user_name"/>
		<result property="passWord" column="pass_word"/>
		<result property="nickName" column="nick_name"/>
		<result property="email" column="email"/>
	</resultMap>
	
	<select id="load" parameterType="int" resultMap="userResultMap">
		select * from t_user where id = #{id}
	</select>
	
	<select id="getUserByUserName" parameterType="String" resultMap="userResultMap">
		select * from t_user where user_name = #{userName}
	</select>
	
	<select id="list" resultMap="userResultMap">
		select * from t_user
	</select>
	
	<insert id="add" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into t_user(user_name,pass_word,nick_name,email) values(#{userName},#{passWord},#{nickName},#{email})
	</insert>
	
	<update id="update" parameterType="User">
		update t_user set user_name = #{userName}, pass_word=#{passWord}, nick_name=#{nickName},email=#{email} where id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from t_user where id = #{id}
	</delete>
	
	<!-- 分页的方法，参数是map类型，返回参数是User -->
	<select id="find" parameterType="map" resultMap="userResultMap">
		select * from t_user 
		where user_name like #{condition} 
		or nick_name like #{condition}
		limit #{offset}, #{pageSize}
	</select>
	<!-- 查找纪录数 -->
	<select id="recordCount" parameterType="String" resultType="int">
		select count(*) from t_user 
		where user_name like #{condition} 
		or nick_name like #{condition}
	</select>

</mapper>